# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Cache
        uses: actions/cache@v4.2.0
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: 
          # An explicit key for restoring and saving the cache
          key: 
          # An ordered multiline string listing the prefix-matched keys, that are used for restoring stale cache if no cache hit occurred for key. Note `cache-hit` returns false in this case.
          restore-keys: # optional
          # The chunk size used to split up large files during upload, in bytes
          upload-chunk-size: # optional
          # An optional boolean when enabled, allows windows runners to save or restore caches that can be restored or saved respectively on other platforms
          enableCrossOsArchive: # optional, default is false
          # Fail the workflow if cache entry is not found
          fail-on-cache-miss: # optional, default is false
          # Check if a cache entry exists for the given input(s) (key, restore-keys) without downloading the cache
          lookup-only: # optional, default is false
          # Run the post step to save the cache even if another step before fails
          save-always: # optional, default is false
      - name: Setup Java JDK
        uses: actions/setup-java@v4.7.0
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: # optional
          # The path to the `.java-version` file. See examples of supported syntax in README file
          java-version-file: # optional
          # Java distribution. See the list of supported distributions in README file
          distribution: 
          # The package type (jdk, jre, jdk+fx, jre+fx)
          java-package: # optional, default is jdk
          # The architecture of the package (defaults to the action runner's architecture)
          architecture: # optional
          # Path to where the compressed JDK is located
          jdkFile: # optional
          # Set this option if you want the action to check for the latest available version that satisfies the version spec
          check-latest: # optional
          # ID of the distributionManagement repository in the pom.xml file. Default is `github`
          server-id: # optional, default is github
          # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
          server-username: # optional, default is GITHUB_ACTOR
          # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
          server-password: # optional, default is GITHUB_TOKEN
          # Path to where the settings.xml file will be written. Default is ~/.m2.
          settings-path: # optional
          # Overwrite the settings.xml file if it exists. Default is "true".
          overwrite-settings: # optional, default is true
          # GPG private key to import. Default is empty string.
          gpg-private-key: # optional
          # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
          gpg-passphrase: # optional
          # Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".
          cache: # optional
          # The path to a dependency file: pom.xml, build.gradle, build.sbt, etc. This option can be used with the `cache` option. If this option is omitted, the action searches for the dependency file in the entire repository. This option supports wildcards and a list of file names for caching multiple dependencies.
          cache-dependency-path: # optional
          # Workaround to pass job status to post job step. This variable is not intended for manual setting
          job-status: # optional, default is ${{ job.status }}
          # The token used to authenticate when fetching version manifests hosted on github.com, such as for the Microsoft Build of OpenJDK. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
          token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
          # Name of Maven Toolchain ID if the default name of "${distribution}_${java-version}" is not wanted. See examples of supported syntax in Advanced Usage file
          mvn-toolchain-id: # optional
          # Name of Maven Toolchain Vendor if the default name of "${distribution}" is not wanted. See examples of supported syntax in Advanced Usage file
          mvn-toolchain-vendor: # optional
      - name: DNSControl Action
        # You may pin to the exact commit or the version.
        # uses: koenrh/dnscontrol-action@58d7e41486784f703aef3d27cdc19e97c0d87da3
        uses: koenrh/dnscontrol-action@v3.31.4
        with:
          # DNSControl command
          args: 
          # Path to DNSControl configuration file.
          config_file: # optional, default is dnsconfig.js
          # Path to DNSControl credentials file.
          creds_file: # optional, default is creds.json

